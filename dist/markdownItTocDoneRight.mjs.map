{"version":3,"file":"markdownItTocDoneRight.mjs","sources":["../index.js"],"sourcesContent":["'use strict'\n\nfunction slugify (x) {\n  return encodeURIComponent(String(x).trim().toLowerCase().replace(/\\s+/g, '-'))\n}\n\nfunction htmlencode (x) {\n/*\n  // safest, delegate task to native -- IMPORTANT: enabling this breaks both jest and runkit, but with browserify it's fine\n  if (document && document.createElement) {\n    const el = document.createElement(\"div\")\n    el.innerText = x\n    return el.innerHTML\n  }\n*/\n\n  return String(x)\n    .replace(/&/g, '&amp;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n}\n\nfunction tocPlugin (md, options) {\n  options = Object.assign({}, {\n    placeholder: '(\\\\$\\\\{toc\\\\}|\\\\[\\\\[?_?toc_?\\\\]?\\\\])',\n    slugify: slugify,\n    containerClass: 'table-of-contents',\n    listClass: undefined,\n    itemClass: undefined,\n    linkClass: undefined,\n    level: 1,\n    listType: 'ol',\n    format: undefined,\n    tocCallback: undefined\n  }, options)\n\n  let ast\n  const pattern = new RegExp('^' + options.placeholder + '$', 'i')\n\n  function toc (state, startLine, endLine, silent) {\n    let token\n    const pos = state.bMarks[startLine] + state.tShift[startLine]\n    const max = state.eMarks[startLine]\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) return false\n\n    // use whitespace as a line tokenizer and extract the first token\n    // to test against the placeholder anchored pattern, rejecting if false\n    const lineFirstToken = state.src.slice(pos, max).split(' ')[0]\n    if (!pattern.test(lineFirstToken)) return false\n\n    if (silent) return true\n\n    state.line = startLine + 1\n\n    token = state.push('tocOpen', 'nav', 1)\n    token.markup = ''\n    token.map = [startLine, state.line]\n\n    token = state.push('tocBody', '', 0)\n    token.markup = ''\n    token.map = [startLine, state.line]\n    token.children = []\n\n    token = state.push('tocClose', 'nav', -1)\n    token.markup = ''\n\n    return true\n  }\n\n  md.renderer.rules.tocOpen = function (/* tokens, idx, options, env, renderer */) {\n    return `<nav class=\"${htmlencode(options.containerClass)}\">`\n  }\n\n  md.renderer.rules.tocClose = function (/* tokens, idx, options, env, renderer */) {\n    return '</nav>'\n  }\n\n  md.renderer.rules.tocBody = function (/* tokens, idx, options, env, renderer */) {\n    return ast2html(ast)\n  }\n\n  function ast2html (tree) {\n    const listClass = options.listClass ? ` class=\"${htmlencode(options.listClass)}\"` : ''\n    const itemClass = options.itemClass ? ` class=\"${htmlencode(options.itemClass)}\"` : ''\n    const linkClass = options.linkClass ? ` class=\"${htmlencode(options.linkClass)}\"` : ''\n\n    const keys = Object.keys(tree.c)\n    if (keys.length === 0) return ''\n\n    let buffer = (`<${htmlencode(options.listType) + listClass}>`)\n    keys.forEach(function (key) {\n      const node = tree.c[key]\n      buffer += (`<li${itemClass}><a${linkClass} href=\"#${node.id}\">${typeof options.format === 'function' ? options.format(node.n, htmlencode) : htmlencode(node.n)}</a>${ast2html(node)}</li>`)\n    })\n    buffer += (`</${htmlencode(options.listType)}>`)\n\n    return buffer\n  }\n\n  function headings2ast (tokens) {\n    const uniques = {}\n    function unique (s) {\n      let u = s\n      let i = 2\n      while (Object.prototype.hasOwnProperty.call(uniques, u)) u = `${s}-${i++}`\n      uniques[u] = true\n      return u\n    }\n\n    const ast = { l: 0, n: '', c: {} }\n    const stack = [ast]\n\n    const isLevelSelectedNumber = selection => level => level >= selection\n    const isLevelSelectedArray = selection => level => selection.includes(level)\n\n    const isLevelSelected = Array.isArray(options.level)\n      ? isLevelSelectedArray(options.level)\n      : isLevelSelectedNumber(options.level)\n\n    for (let i = 0, iK = tokens.length; i < iK; i++) {\n      const token = tokens[i]\n      if (token.type === 'heading_open') {\n        const key = (\n          tokens[i + 1]\n            .children\n            .filter(function (token) { return token.type === 'text' || token.type === 'code_inline' })\n            .reduce(function (acc, t) { return acc + t.content }, '')\n        )\n\n        const node = {\n          l: parseInt(token.tag.substr(1), 10),\n          n: key,\n          c: {}\n        }\n\n        if (isLevelSelected(node.l)) {\n          node.id = unique(options.slugify(key))\n          if (node.l > stack[0].l) {\n            stack[0].c[node.id] = node\n            stack.unshift(node)\n          } else if (node.l === stack[0].l) {\n            stack[1].c[node.id] = node\n            stack[0] = node\n          } else {\n            while (node.l <= stack[0].l) stack.shift()\n            stack[0].c[node.id] = node\n            stack.unshift(node)\n          }\n        }\n      }\n    }\n\n    return ast\n  }\n\n  md.core.ruler.push('generateTocAst', function (state) {\n    const tokens = state.tokens\n    ast = headings2ast(tokens)\n\n    if (typeof options.tocCallback === 'function') {\n      options.tocCallback(md.renderer.rules.tocOpen() + md.renderer.rules.tocBody() + md.renderer.rules.tocClose())\n    }\n  })\n\n  md.block.ruler.before('heading', 'toc', toc, {\n    alt: ['paragraph', 'reference', 'blockquote']\n  })\n}\n\nexport default tocPlugin\n"],"names":["slugify","x","encodeURIComponent","String","trim","toLowerCase","replace","htmlencode","md","options","ast","Object","assign","placeholder","containerClass","listClass","undefined","itemClass","linkClass","level","listType","format","tocCallback","pattern","RegExp","renderer","rules","tocOpen","tocClose","tocBody","ast2html","tree","keys","c","length","buffer","forEach","key","node","n","core","ruler","push","state","tokens","uniques","unique","s","u","i","prototype","hasOwnProperty","call","selection","l","stack","isLevelSelected","Array","isArray","includes","isLevelSelectedNumber","iK","token","type","children","filter","reduce","acc","t","content","parseInt","tag","substr","id","unshift","shift","headings2ast","block","before","startLine","endLine","silent","sCount","blkIndent","lineFirstToken","src","slice","bMarks","tShift","eMarks","split","test","line","markup","map","alt"],"mappings":"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"}